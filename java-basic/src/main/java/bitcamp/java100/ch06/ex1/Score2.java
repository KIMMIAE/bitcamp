package bitcamp.java100.ch06.ex1;

// 새 데이터를 다루는 연산자를 정의한다.
public class Score2 {
    //필드 선언
    // => 메모리 설계 명령
    String name;
    int kor;
    int eng;
    int math;
    int sum;
    float aver;
    
    // 메서드 선언 (= 연산자 정의)
    // => 새 데이터 타입에 맞춰서 그 데이터를 다루는 코드를 별도의 메서드로 정의해 둔다.
    // => 메서드가 하는 일이 기존의 연산자처럼 메모리의 데이터를 다루기 때문에
    //    이렇게 인스턴스 데이터를 다루는 메서드를 "연산자(operator)"라고도 부른다.
    // => 메서드는 메모리를 다루는 명령어이기 때문에
    //    메서드의 이름은 보통 동사로 시작한다.
    
    
    void compute() {
        this.sum = this.kor + this.eng + this.math;
        this.aver = this.sum / 3f;
        // 인스턴스의 변수를 다루려면 인스턴스의 주소를 알아야 한다.
        // 그래서 인스턴스 메서드를 호출할 때는 항상 다음과 같이 인스턴스 주소를 준다.
        // >      인스턴스주소.메서드명();
        // 이렇게 넘겨받는 인스턴스 주소를 저장한 변수가 this 이다.
        // this 변수는 모든 인스턴스 메서드에 내장되어 있다.
        // 그리고 이 변수에 인스턴스 주소가 저장되어 있다.
        //
        // this 변수가 null일 수 있는가? 없다.
        // 왜? 인스턴스주소 없이 메서드를 호출하면 실행 오류가 발생하기 때문이다.
    }
}

